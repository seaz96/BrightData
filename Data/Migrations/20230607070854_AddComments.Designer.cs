// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using digital_portfolio.Data;

#nullable disable

namespace digital_portfolio.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230607070854_AddComments")]
    partial class AddComments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("digital_portfolio.Data.Entities.CommentsEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AuthorID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectEntityId")
                        .HasColumnType("text");

                    b.Property<string>("PublishedDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectEntityId");

                    b.ToTable("CommentsEntity");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.ProjectEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AuthorID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GithubLink")
                        .HasColumnType("text");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.TechnologiesEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectEntityId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectEntityId");

                    b.ToTable("TechnologiesEntity");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("TelegramLink")
                        .HasColumnType("text");

                    b.Property<string>("VkLink")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.CommentsEntity", b =>
                {
                    b.HasOne("digital_portfolio.Data.Entities.ProjectEntity", null)
                        .WithMany("Comments")
                        .HasForeignKey("ProjectEntityId");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.TechnologiesEntity", b =>
                {
                    b.HasOne("digital_portfolio.Data.Entities.ProjectEntity", null)
                        .WithMany("Technologies")
                        .HasForeignKey("ProjectEntityId");
                });

            modelBuilder.Entity("digital_portfolio.Data.Entities.ProjectEntity", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Technologies");
                });
#pragma warning restore 612, 618
        }
    }
}
